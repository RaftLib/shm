// vim: set filetype=cpp:

/**
 * shm_module.hpp.in - 
 * Copyright 2021 Jonathan Beard
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at:
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * @author: Jonathan Beard
 * @version: Aug 27 2021
 */
#include <limits>

#ifndef SHM_MODULE_INCLUDE
#define SHM_MODULE_INCLUDE 1

#ifndef PLATFORM_HAS_NUMA
#define PLATFORM_HAS_NUMA @CMAKE_NUMA_DEFINE@
#endif


#ifndef USE_CPP_EXCEPTIONS
#define USE_CPP_EXCEPTIONS @CPP_EXCEPTIONS@
#endif

#if (@USE_SYSV_SHM@ == 1)

//for key_t type 
#include <sys/shm.h>
using shm_key_t = key_t; 
static constexpr auto shm_initial_key = std::numeric_limits< shm_key_t >::min();

#ifndef _USE_SYSTEMV_SHM_ 
#define _USE_SYSTEMV_SHM_ 1
#endif

#ifndef _USE_POSIX_SHM_
#define _USE_POSIX_SHM_ 0
#endif

#elif (@USE_POSIX_SHM@ == 1)
static constexpr auto shm_key_length = 24;

using shm_key_t = char[ shm_key_length ];

static constexpr auto shm_initial_key = '\0';
#ifndef _USE_SYSTEMV_SHM_ 
#define _USE_SYSTEMV_SHM_ 0
#endif

#ifndef _USE_POSIX_SHM_
#define _USE_POSIX_SHM_ 1
#endif


#endif /** end POSIX vs. SystemV interface selection **/

#endif /** END MODULE INCLUDE **/
